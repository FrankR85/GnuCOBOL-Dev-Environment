#!/bin/bash
#================================================================================
# Build ZUTZCPC.CBL - Z390 compatible unit test framework for batch COBOL.
#================================================================================
#. envvars

#export COBCPY="$MAINCPY:$TESTCPY"

function show_help {
	echo 'GNU COBOL compile script'
	echo "Version $VERSION"
	echo 'Usage: compile [options] program-name-without-suffix [subprogram-names]'
  echo '    -c | --clean  Delete the existing executable before compiling'
	echo '    -h | --help     Display usage help (this text) and exit'
	echo '    -t | --test     Source is in the project test directory (not main)'
  echo '    -s | --subprogram Generate a callable subprogram (not an executable)'
}

CLEAN=false
TEST=false
SUBPROGRAM=false

TEMP=`getopt -o chst --long clean,help,subprogram,test \
             -n 'javawrap' -- "$@"`

if [ $? != 0 ] ; then show_help >&2 ;
	#exit 0 ;
fi

eval set -- "$TEMP"

while [ $# -gt 0 ]; do
  case "$1" in
    -c | --clean ) CLEAN=true; shift ;;
    -h | --help ) show_help; exit 0 ;;
    -s | --subprogram ) SUBPROGRAM=true; shift ;;
    -t | --test ) TEST=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

if [ $# -eq 0 ]
  then
    show_help
    #exit 0
fi

mkdir -p "$TARGET"

if [ $TEST == true ]; then              # compile test source
	SOURCE="$TESTSRC"
else
  SOURCE="$MAINSRC"                     # compile production source
fi

if [ $SUBPROGRAM == true ]; then        # make a dynamic link module
  SUFFIX='.so'
  COBOPTS='-m'
else                                    # make an executable
  SUFFIX=
  COBOPTS='-x'
fi

                                        # remove existing output file, if any
if [ $CLEAN == true ] && [ -e "$TARGET/${1}${SUFFIX}" ]; then
    rm "$TARGET/${1}${SUFFIX}"
fi
touch ${1}${SUFFIX} #To specify the output destination for cobc the file must exist
cobc "$COBOPTS" -std=ibm -o ${1}${SUFFIX} -w $1.cbl      # compile, assemble, link w/ selected options
if [ $? -eq 0 ]                         # copy output file to target directory
  then
    mv "${1}${SUFFIX}" "$TARGET/."
    #exit 0
  else
		echo "Compile nicht erfolgreich!"
    #exit 1
fi
